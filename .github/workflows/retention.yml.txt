name: Retention (daily purge)

on:
  schedule:
    - cron: "0 2 * * *"   # 02:00 UTC ≈ 04:00 Zurich
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry-run (no delete)"
        type: boolean
        default: true
      keep_last_snapshots:
        description: "KEEP_LAST_SNAPSHOTS (default 200)"
        type: number
        default: 200
      max_age_snapshots:
        description: "MAX_AGE_SNAPSHOTS in days (default 120)"
        type: number
        default: 120
      keep_last_deltas:
        description: "KEEP_LAST_DELTAS (default 120)"
        type: number
        default: 120
      max_age_deltas:
        description: "MAX_AGE_DELTAS in days (default 180)"
        type: number
        default: 180

jobs:
  purge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      # Valeurs par défaut (écrasées si lancement manuel avec inputs)
      KEEP_LAST_SNAPSHOTS: ${{ inputs.keep_last_snapshots || 200 }}
      MAX_AGE_SNAPSHOTS:   ${{ inputs.max_age_snapshots   || 120 }}
      KEEP_LAST_DELTAS:    ${{ inputs.keep_last_deltas    || 120 }}
      MAX_AGE_DELTAS:      ${{ inputs.max_age_deltas      || 180 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Pas de dépendances externes: le script utilise uniquement la stdlib
      - name: Run retention (dry-run or force)
        run: |
          if [ "${{ inputs.dry_run }}" = "true" ] || [ -z "${{ inputs.dry_run }}" ]; then
            echo "Running in DRY-RUN mode"
            python scripts/retention.py --dry-run --verbose
          else
            echo "Running in FORCE mode"
            python scripts/retention.py --force --verbose
          fi

      # Après purge, on régénère les index pour refléter l'état des dossiers
      - name: Setup Python for index build
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install minimal deps for index
        run: |
          python -m pip install --upgrade pip
          # build_indexes.py ne dépend que de stdlib (si c'est ton cas, laisse vide).
          # S'il a besoin de pandas/requests, décommente la ligne suivante:
          # pip install "pandas>=2.2.3,<2.3" "requests>=2.32.3,<3"

      - name: Rebuild directory indexes
        run: |
          if [ -f scripts/build_indexes.py ]; then
            python scripts/build_indexes.py
          else
            echo "No build_indexes.py found, skipping"
          fi

      - name: Commit and push (if changes)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add -A
          git commit -m "chore: retention purge + indexes" || echo "No changes"
          git push
