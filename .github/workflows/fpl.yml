name: FPL Hourly Pipeline

on:
  schedule:
    - cron: "0 * * * *"     # toutes les heures
  workflow_dispatch:        # lancement manuel depuis l'onglet Actions
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Fetch FPL data (players_raw, fixtures, teams, player_idlist)
        run: python scripts/fetch_bootstrap.py

      - name: Normalize (optional)
        run: |
          if [ -f scripts/normalize_columns.py ]; then
            python scripts/normalize_columns.py || true
          fi

      - name: Update deadlines
        run: python scripts/update_deadlines.py

      - name: Snapshot players_raw
        run: python scripts/snapshot_players_raw.py

      - name: NTI deltas
        run: python scripts/calc_nti_deltas.py

      - name: Price change forecast
        run: python scripts/price_change_forecast.py

      - name: Global test
        run: python scripts/run_global_test.py --with-api-check --with-fixtures-diff

      # Préparation du site pour GitHub Pages : copie les CSV dans ./site/data
      - name: Prepare site folder
        run: |
          mkdir -p site/data
          cp -r data/*.csv site/data/ 2>/dev/null || true
          mkdir -p site/data/snapshots
          # garder seulement les 200 derniers snapshots pour éviter un site énorme
          ls -1t data/snapshots/*.csv | head -n 200 | xargs -I {} cp "{}" site/data/snapshots/
          # index minimal
          cat > site/index.html <<'HTML'
          <!doctype html>
          <html><head><meta charset="utf-8"><title>FPL Data</title></head>
          <body>
            <h1>FPL Data (Public)</h1>
            <ul>
              <li><a href="data/price_change_forecast.csv">price_change_forecast.csv</a></li>
              <li><a href="data/nti_deltas.csv">nti_deltas.csv</a></li>
              <li><a href="data/deadlines.csv">deadlines.csv</a></li>
              <li><a href="data/players_raw.csv">players_raw.csv</a></li>
              <li><a href="data/fixtures.csv">fixtures.csv</a></li>
              <li><a href="data/teams.csv">teams.csv</a></li>
              <li><a href="data/player_idlist.csv">player_idlist.csv</a></li>
              <li><a href="data/cleaned_players.csv">cleaned_players.csv</a></li>
              <li><a href="data/merged_gw.csv">merged_gw.csv</a></li>
              <li><a href="data/snapshots/">snapshots/</a> (200 derniers)</li>
            </ul>
          </body></html>
          HTML

      - name: Upload artifact (for Pages)
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
